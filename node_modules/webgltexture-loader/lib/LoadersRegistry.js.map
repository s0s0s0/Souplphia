{"version":3,"sources":["../src/LoadersRegistry.js"],"names":["LoadersRegistry","_loaders","loader","push","sort","a","b","priority","i","indexOf","splice"],"mappings":";;;;;;;;;;AAGA;;;;IAIqBA,e;;;;SACnBC,Q,GAAkD,E;;;;;;;AAElD;;;wBAGIC,M,EAAwC;AAC1C,WAAKD,QAAL,CAAcE,IAAd,CAAmBD,MAAnB;AACA,WAAKD,QAAL,CAAcG,IAAd,CACE,UAACC,CAAD,EAAIC,CAAJ;AAAA,eACE,CAAC,OAAOA,EAAEC,QAAT,KAAsB,QAAtB,GAAiCD,EAAEC,QAAnC,GAA8C,CAA/C,KACC,OAAOF,EAAEE,QAAT,KAAsB,QAAtB,GAAiCF,EAAEE,QAAnC,GAA8C,CAD/C,CADF;AAAA,OADF;AAKD;;AAED;;;;;;2BAGOL,M,EAAwC;AAC7C,UAAMM,IAAI,KAAKP,QAAL,CAAcQ,OAAd,CAAsBP,MAAtB,CAAV;AACA,UAAIM,MAAM,CAAC,CAAX,EAAc;AACZ,aAAKP,QAAL,CAAcS,MAAd,CAAqBF,CAArB,EAAwB,CAAxB;AACD;AACF;;AAED;;;;;;0BAGM;AACJ,aAAO,KAAKP,QAAZ;AACD;;;;;;kBA9BkBD,e","file":"LoadersRegistry.js","sourcesContent":["//@flow\nimport type WebGLTextureLoader from \"./WebGLTextureLoader\";\n\n/**\n * LoadersRegistry\n * loaders can define a static priority number. more high is priority, more important the loader is to be used first.\n */\nexport default class LoadersRegistry {\n  _loaders: Array<Class<WebGLTextureLoader<any>>> = [];\n\n  /**\n   * Add a TextureLoader class to extend texture format support.\n   */\n  add(loader: Class<WebGLTextureLoader<any>>) {\n    this._loaders.push(loader);\n    this._loaders.sort(\n      (a, b) =>\n        (typeof b.priority === \"number\" ? b.priority : 0) -\n        (typeof a.priority === \"number\" ? a.priority : 0)\n    );\n  }\n\n  /**\n   * Remove a previously added WebGLTextureLoader class.\n   */\n  remove(loader: Class<WebGLTextureLoader<any>>) {\n    const i = this._loaders.indexOf(loader);\n    if (i !== -1) {\n      this._loaders.splice(i, 1);\n    }\n  }\n\n  /**\n   * List the loaders ordered by most priority first\n   */\n  get() {\n    return this._loaders;\n  }\n}\n"]}