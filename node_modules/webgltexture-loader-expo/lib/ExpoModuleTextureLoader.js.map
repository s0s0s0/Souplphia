{"version":3,"sources":["../src/ExpoModuleTextureLoader.js"],"names":["globalRegistry","WebGLTextureLoaderAsyncHashCache","Image","Asset","FileSystem","md5","neverEnding","Promise","hash","module","uri","localAsset","asset","fromModule","downloadAsync","then","remoteAssetCache","remoteAsset","i","lastIndexOf","ext","slice","key","resolve","promise","all","success","failure","getSize","width","height","documentDirectory","cache","size","localUri","localFile","loadAsset","startsWith","ExpoModuleTextureLoader","objIds","WeakMap","canLoad","input","inputHash","loadNoCache","gl","disposed","dispose","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","add"],"mappings":"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","file":"ExpoModuleTextureLoader.js","sourcesContent":["//@flow\nimport {\n  globalRegistry,\n  WebGLTextureLoaderAsyncHashCache\n} from \"webgltexture-loader\";\nimport { Image } from \"react-native\";\nimport {Asset, FileSystem} from \"expo\";\nimport md5 from \"./md5\";\n\nconst neverEnding = new Promise(() => {});\n\ntype AssetModel = {\n  width: number,\n  height: number,\n  uri: string,\n  localUri: string\n};\n\nconst hash = (module: number | { uri: string }) =>\n  typeof module === \"number\" ? module : module.uri;\n\nconst localAsset = (module: number) => {\n  const asset = Asset.fromModule(module);\n  return asset.downloadAsync().then(() => asset);\n};\n\nconst remoteAssetCache = {};\n\nconst remoteAsset = (uri: string) => {\n  const i = uri.lastIndexOf(\".\");\n  const ext = i !== -1 ? uri.slice(i) : \".jpg\";\n  const key = md5(uri);\n  if (key in remoteAssetCache) {\n    return Promise.resolve(remoteAssetCache[key]);\n  }\n  const promise = Promise.all([\n    new Promise((success, failure) =>\n      Image.getSize(uri, (width, height) => success({ width, height }), failure)\n    ),\n    FileSystem.downloadAsync(\n      uri,\n      FileSystem.documentDirectory + `ExponentAsset-${key}${ext}`,\n      {\n        cache: true\n      }\n    )\n  ]).then(([size, asset]) => ({ ...size, uri, localUri: asset.uri }));\n  remoteAssetCache[key] = promise;\n  return promise;\n};\n\nconst localFile = (uri: string) => {\n  const i = uri.lastIndexOf(\".\");\n  const ext = i !== -1 ? uri.slice(i) : \".jpg\";\n  const key = md5(uri);\n  if (key in remoteAssetCache) {\n    return Promise.resolve(remoteAssetCache[key]);\n  }\n  const promise = new Promise((success, failure) =>\n    Image.getSize(uri, (width, height) => success({ width, height }), failure)\n  ).then(size => ({ ...size, uri, localUri: uri }));\n  remoteAssetCache[key] = promise;\n  return promise;\n};\n\nexport const loadAsset = (module: number | { uri: string }): Promise<AssetModel> =>\n  typeof module === \"number\"\n    ? localAsset(module)\n    : module.uri.startsWith(\"file:\") ||\n      module.uri.startsWith(\"data:\") ||\n      module.uri.startsWith(\"asset:\") || // All local paths in Android Expo standalone app\n      module.uri.startsWith(\"assets-library:\") || // CameraRoll.getPhotos iOS\n      module.uri.startsWith(\"content:\") || // CameraRoll.getPhotos Android\n      module.uri.startsWith(\"/\") // Expo.takeSnapshotAsync in DEV in Expo 31\n      ? localFile(module.uri)\n      : remoteAsset(module.uri);\n\nclass ExpoModuleTextureLoader extends WebGLTextureLoaderAsyncHashCache<\n  number | { uri: string }\n> {\n  objIds: WeakMap<WebGLTexture, number> = new WeakMap();\n\n  canLoad(input: any) {\n    return (\n      typeof input === \"number\" ||\n      (input && typeof input === \"object\" && typeof input.uri === \"string\")\n    );\n  }\n\n  inputHash(module: *) {\n    return typeof module === \"number\" ? module : module.uri;\n  }\n\n  loadNoCache(module: *) {\n    const { gl } = this;\n    let disposed = false;\n    const dispose = () => {\n      disposed = true;\n    };\n    const promise = loadAsset(module).then(asset => {\n      if (disposed) return neverEnding;\n      const { width, height } = asset;\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      // $FlowFixMe\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        width,\n        height,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        asset\n      );\n      return { texture, width, height };\n    });\n    return { promise, dispose };\n  }\n}\n\nglobalRegistry.add(ExpoModuleTextureLoader);\n\nexport default ExpoModuleTextureLoader;\n"]}